¿Qué característica principal tienen los conjuntos que se almacenan en la memoria de una computadora, según el documento?;Son dinámicos, es decir, su contenido cambia con el tiempo.
¿Cuáles son las dos operaciones básicas que se necesitan para reflejar el dinamismo de un conjunto?;ALTA (incorporar un nuevo elemento) y BAJA (eliminar un elemento existente).
En el contexto de la realidad, ¿cómo son los elementos de los conjuntos con los que se trabaja?;Son elementos complejos, compuestos por una combinación de características, no por un solo valor.
¿Cómo se denominan las características (D1, ..., Dk) que se registran para cada elemento de un conjunto?;Atributos o Dominios.
¿Qué es una "nupla" (o tupla)?;Es un elemento del conjunto compuesto por un valor para cada uno de los atributos o dominios que lo caracterizan.
¿Cómo se formaliza un conjunto de datos complejos (como empleados) en términos matemáticos?;Como una Relación (R), que es un subconjunto del producto cartesiano de todos sus dominios: \( R \subseteq D_1 \times D_2 \times \dots \times D_k \).
¿Qué es la "evocación asociativa"?;Es la operación que permite recuperar una nupla completa (o parte de ella) a partir del valor de un atributo conocido que actúa como identificador.
En una evocación, los atributos se clasifican en dos grupos, ¿cuáles son?;Los que se **aportan** en la evocación (la clave de búsqueda) y los que se **reciben** en la evocación (el resultado).
En la notación para describir una evocación, ¿qué significan los símbolos "*" y "?" debajo de los dominios?;"*" indica un dominio **aportado** (se provee su valor para la búsqueda).<br>"?" indica un dominio **recibido** (su valor es el que se desea obtener).
¿Qué es un "identificador" en el contexto de un conjunto de nuplas?;Es un atributo (o conjunto de atributos) cuyo valor es único para cada nupla, permitiendo identificarla sin ambigüedad.
¿Qué es una Dependencia Funcional, denotada como \( X \to Y \)?;Significa que "X determina funcionalmente a Y". Establece que para cada valor del atributo X, existe un único valor correspondiente del atributo Y. Esto garantiza que el identificador es único.
**EJEMPLO PRÁCTICO:** En una relación `Facturación ⊆ Día × Mes × Año × Monto Total`, ¿cuál sería la evocación asociativa para saber cuánto se facturó en una fecha específica?;Aportados (*): Día, Mes, Año.<br>Recibido (?): Monto Total.<br>La dependencia funcional sería: \({Día, Mes, Año} \to Monto Total\).
¿Cuál es la rutina fundamental que todas las operaciones como Alta, Baja y Pertenencia necesitan invocar?;La rutina de **localización** de un elemento en la estructura.
¿Cuál es el encabezado genérico en pseudo-código para la rutina que localiza un elemento?;`Localizar (in x, out pos, out éxito)`
En el encabezado `Localizar (in x, out pos, out éxito)`, ¿qué representa el parámetro de salida `pos` si `éxito` es `false`?;Representa la posición donde el nuevo elemento con clave `x` **debería ser insertado** para mantener el orden o la lógica de la estructura.
Describe el pseudo-código conceptual para la operación de ALTA.;`Alta (in x, in y, out éxito)<br>{<br>  Localizar (x, pos, éxito’)<br>  if éxito’ then /* ya existe */<br>    éxito ← false<br>  else /* no existe */<br>    if hay_espacio then<br>      modificar_estructura_en(pos)_para_insertar(x,y)<br>      éxito ← true<br>    else /* no hay espacio */<br>      éxito ← false<br>}`
¿Por qué el parámetro `éxito` en la rutina de ALTA no puede ser simplemente booleano (verdadero/falso)?;Porque debe distinguir entre tres resultados posibles: 1. Alta exitosa, 2. Alta fracasada por falta de espacio, y 3. Alta fracasada por elemento ya existente (clave duplicada).
Describe el pseudo-código conceptual para la operación de BAJA.;`Baja (in x, in y, out éxito)<br>{<br>  Localizar (x, pos, éxito’)<br>  if éxito’ then /* existe nupla con ese x */<br>    if (elemento_en pos).y == y then /* es la nupla correcta */<br>      modificar_estructura_para_olvidar(x,y)<br>      éxito ← true<br>    else /* no es la nupla que se quiere eliminar */<br>      éxito ← false<br>  else /* no hay nupla con ese x */<br>    éxito ← false<br>}`
Describe el pseudo-código conceptual para la operación de EVOCACIÓN ASOCIATIVA.;`Evocación (in x, out y, out éxito)<br>{<br>  Localizar (x, pos, éxito’)<br>  if éxito’ then /* existe nupla con ese x */<br>    y ← (elemento_en pos).y<br>    éxito ← true<br>  else /* no hay nupla con ese x */<br>    éxito ← false<br>}`
Después de invocar una rutina de Evocación Asociativa, ¿qué se debe hacer siempre antes de usar el valor del parámetro de salida `y`?;Se debe verificar primero que el parámetro `éxito` sea `true`, para asegurarse de que la evocación fue exitosa y que `y` contiene un dato válido.
¿Por qué la operación de `Modificación` se define conceptualmente solo para cambiar la parte `Y` (asociado) y no la clave `X` (asociante)?;Porque la posición de un elemento en muchas estructuras de datos depende de su clave `X`. Cambiar `X` requeriría mover el elemento, lo que es conceptualmente una **Baja** de la nupla vieja seguida de un **Alta** de la nupla nueva.
Describe el pseudo-código conceptual para la operación de MODIFICACIÓN (de la parte Y).;`Modificación (in x, in y, out éxito)<br>{<br>  Localizar (x, pos, éxito’)<br>  if éxito’ then /* existe nupla con ese x */<br>    (elemento_en pos).y ← y<br>    éxito ← true<br>  else /* no hay nupla con ese x */<br>    éxito ← false<br>}`
¿Cuál es la práctica de programación fundamental respecto a la rutina `Localizar`?;`Localizar` solo debe ser invocada **dentro** de las rutinas de manipulación (Alta, Baja, etc.) y **nunca** directamente desde el programa principal. Esto se conoce como **encapsulamiento**.
¿Por qué es importante que las rutinas se comuniquen con el exterior solo a través de sus parámetros?;Para mantener el código modular y reutilizable. Una rutina no debe asumir qué hará quien la invoca con el resultado (por ejemplo, imprimirlo en pantalla); solo debe devolverlo.
**INTERPRETACIÓN DE ESCENARIO:** Un sistema de biblioteca usa el ISBN para buscar libros. Si quiero obtener el título y autor de un libro, ¿qué es `X` (asociante), `Y` (asociado) y la dependencia funcional?;`X` = ISBN.<br>`Y` = {Título, Autor}.<br>La dependencia funcional es `ISBN → {Título, Autor}`.
**ANÁLISIS DE CÓDIGO:** `Localizar(x, pos, exito); if exito then y_obtenido = (elemento en pos).y;`. ¿Qué operación se está implementando?;Se está implementando la parte central de una **Evocación Asociativa**.